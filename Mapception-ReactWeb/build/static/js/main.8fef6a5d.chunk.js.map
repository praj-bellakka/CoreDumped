{"version":3,"sources":["utils/firebase.js","App.js","reportWebVitals.js","index.js"],"names":["firebase","initializeApp","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","useStyles","makeStyles","theme","root","color","backgroundColour","palette","common","white","index","mapList","curr_address","curr_coordinates","curr_placeID","path","uid","isUserExist","nameOfUser","information","Geocode","setApiKey","App","state","address","condensedAddress","coordinates","placeId","zoom","height","mapPosition","lat","lng","markerPosition","onMarkerDragEnd","event","newLat","latLng","newLng","fromLatLng","then","response","console","log","results","formatted_address","id","place_id","geometry","location","setState","onPlaceSelected","place","clearLocations","uploadLocations","currentPath","numberOfLocations","locationRef","database","ref","dataPacket","push","navigator","geolocation","getCurrentPosition","position","coords","latitude","longitude","error","condensedName","MapWithAMarker","withScriptjs","withGoogleMap","props","defaultZoom","defaultCenter","className","style","width","draggable","onDragEnd","paddindLeft","marginTop","marginBottom","options","types","componentRestrictions","country","Grid","container","spacing","alignItems","justifyContent","item","xs","Box","left","EnterUID","EnterName","EnterInfo","component","background","googleMapURL","loadingElement","containerElement","mapElement","right","bordered","column","size","Item","label","span","this","top","Button","variant","startIcon","onClick","addLocation","React","Component","classes","useState","input","setInput","handleOnSubmit","e","preventDefault","concat","verification","onSubmit","TextField","onChange","target","value","type","userPath","once","snapshot","exists","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.8fef6a5d.chunk.js","sourcesContent":["import firebase from 'firebase';\r\n\r\nconst firebaseConfig = {\r\n  apiKey: \"AIzaSyDP6-Aspk6si6MxQEDzmx8Zt-qxw2I1Dzg\",\r\n  authDomain: \"mapception-c014b.firebaseapp.com\",\r\n  databaseURL: \"https://mapception-c014b-default-rtdb.asia-southeast1.firebasedatabase.app\",\r\n  projectId: \"mapception-c014b\",\r\n  storageBucket: \"mapception-c014b.appspot.com\",\r\n  messagingSenderId: \"44291013706\",\r\n  appId: \"1:44291013706:web:a159cd16d0620f2bb6fab3\"\r\n};\r\n\r\nfirebase.initializeApp(firebaseConfig);\r\n\r\nexport default firebase;\r\n","import React, { useState } from 'react';\nimport './App.css';\nimport {\n  InfoWindow,\n  withScriptjs,\n  withGoogleMap,\n  GoogleMap,\n  Marker,\n} from \"react-google-maps\";\nimport Geocode from \"react-geocode\";\nimport { Descriptions } from 'antd';\nimport AutoComplete from \"react-google-autocomplete\";\nimport firebase from './utils/firebase';\nimport { Button, TextField, Grid, Box } from '@material-ui/core';\nimport CloudUploadIcon from '@material-ui/icons/CloudUpload';\nimport ClearAllIcon from '@material-ui/icons/ClearAll';\nimport AddIcon from '@material-ui/icons/Add';\nimport PersonIcon from '@material-ui/icons/Person';\nimport FingerprintIcon from '@material-ui/icons/Fingerprint';\nimport InfoIcon from '@material-ui/icons/Info';\nimport { makeStyles } from '@material-ui/core/styles';\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    '& .MuiTextField-root': {\n      color: \"white\",\n      backgroundColour: theme.palette.common.white,\n    },\n  },\n}));\n\n\n//global variables\nconst apiKey = \"AIzaSyBsPi3wA_-SZVURg6_iBq8zz5mxW5UcHNo\";\nvar index = 0;\nvar mapList = [];\nvar curr_address = '';\nvar curr_coordinates = [];\nvar curr_placeID = '';\nvar path = '';\nvar uid = '';\nvar isUserExist = false;\nvar nameOfUser = '';\nvar information = '';\n\n\nGeocode.setApiKey(apiKey);\n\nclass App extends React.Component {\n  state = {\n    address: \"\",\n    condensedAddress: \"\",\n    coordinates: [],\n    placeId: \"\",\n    zoom: 12,\n    height: 400,\n    mapPosition: {\n      lat: 0,\n      lng: 0,\n    },\n    markerPosition: {\n      lat: 0,\n      lng: 0,\n    }\n  }\n\n\n\n  componentDidMount() {\n    if (navigator.geolocation) {\n      navigator.geolocation.getCurrentPosition(position => {\n        console.log('position', navigator.geolocation);\n        this.setState({\n          mapPosition: {\n            lat: position.coords.latitude,\n            lng: position.coords.longitude,\n          },\n          markerPosition: {\n            lat: position.coords.latitude,\n            lng: position.coords.longitude,\n          }\n        },\n          () => {\n            Geocode.fromLatLng(position.coords.latitude, position.coords.longitude).then(\n              response => {\n                console.log('response', response);\n                const address = response.results[0].formatted_address;\n                const id = response.results[0].place_id;\n                const lat = response.results[0].geometry.location.lat;\n                const lng = response.results[0].geometry.location.lng;\n                const coordinates = [lat, lng];\n                curr_address = address;\n                curr_coordinates = coordinates;\n                curr_placeID = id;\n\n\n\n                this.setState({\n                  address: (address) ? address : '',\n                  condensedAddress: (address) ? address : \"\",\n                  coordinates: (coordinates) ? coordinates : \"\",\n                  placeId: (id) ? id : \"\"\n                })\n              },\n              error => {\n                console.error(error);\n              }\n            );\n\n          })\n      });\n    } else {\n      console.error(\"Geolocation is not supported by this browser!\");\n    }\n  };\n\n  onMarkerDragEnd = (event) => {\n    let newLat = event.latLng.lat();\n    let newLng = event.latLng.lng();\n\n    Geocode.fromLatLng(newLat, newLng).then(response => {\n      console.log('response', response);\n      const address = response.results[0].formatted_address;\n      const id = response.results[0].place_id;\n      const lat = response.results[0].geometry.location.lat;\n      const lng = response.results[0].geometry.location.lng;\n      const coordinates = [lat, lng];\n\n\n      curr_address = address;\n      curr_coordinates = coordinates;\n      curr_placeID = id;\n\n      this.setState({\n        address: (address) ? address : \"\",\n        condensedAddress: (address) ? address : \"\",\n        coordinates: (coordinates) ? coordinates : \"\",\n        placeId: (id) ? id : \"\",\n        mapPosition: {\n          lat: lat,\n          lng: lng\n        },\n        markerPosition: {\n          lat: lat,\n          lng: lng\n        }\n      })\n    });\n  }\n\n  onPlaceSelected = (place) => {\n    console.log('place', place);\n    const address = place.formatted_address;\n    const id = place.place_id;\n    const lat = place.geometry.location.lat();\n    const lng = place.geometry.location.lng();\n    const coordinates = [lat, lng];\n\n\n    curr_address = address;\n    curr_coordinates = coordinates;\n    curr_placeID = id;\n\n\n    this.setState({\n      address: (address) ? address : \"\",\n      condensedAddress: (address) ? address : \"\",\n      coordinates: (coordinates) ? coordinates : \"\",\n      placeId: (id) ? id : \"\",\n      mapPosition: {\n        lat: lat,\n        lng: lng\n      },\n      markerPosition: {\n        lat: lat,\n        lng: lng\n      }\n    })\n  };\n\n  addLocation() {\n    const location = {\n      address: curr_address,\n      condensedName: curr_address,\n      coordinates: curr_coordinates,\n      placeId: curr_placeID,\n    }\n    mapList[index] = location;\n    index = index + 1;\n    console.log(index);\n  }\n\n  clearLocations = () => {\n    index = 0;\n    mapList = [];\n  }\n\n\n\n  uploadLocations = () => {\n    var currentPath = path;\n    console.log('currentPath', currentPath);\n    var numberOfLocations = index;\n\n    if (currentPath) {\n      const locationRef = firebase.database().ref(currentPath);\n      const dataPacket = {\n        information,\n        mapList,\n        nameOfUser,\n        numberOfLocations,\n      };\n      locationRef.push(dataPacket);\n      this.clearLocations();\n      console.log(\"uploaded\");\n    }\n    else {\n      console.log(\"invalid path\");\n    }\n  }\n\n  render() {\n    const MapWithAMarker = withScriptjs(withGoogleMap(props =>\n      <GoogleMap\n        defaultZoom={11}\n        defaultCenter={{ lat: this.state.mapPosition.lat, lng: this.state.mapPosition.lng }}\n        className='map'\n        style={{ width: '80%' }}\n\n      >\n        <Marker\n          draggable={true}\n          onDragEnd={this.onMarkerDragEnd}\n          position={{ lat: this.state.markerPosition.lat, lng: this.state.mapPosition.lng }}\n        >\n          <InfoWindow>\n            <div>{this.state.address}</div>\n          </InfoWindow>\n        </Marker>\n        <AutoComplete\n          apiKey={apiKey}\n          style={{ width: \"100%\", height: '40px', paddindLeft: 16, marginTop: 2, marginBottom: '2rem', }}\n          onPlaceSelected={this.onPlaceSelected}\n          options={{ types: \"address\", componentRestrictions: { country: \"sg\" } }}\n        />\n      </GoogleMap>\n\n    ));\n\n    return (\n      <div>\n        <Grid container spacing={1} alignItems=\"center\" justifyContent=\"center\" className=\"grid\">\n          <Grid item xs={12}>\n            <h1 className=\"title-dashboard\">Welcome to MAPCEPTION's dashboard</h1>\n          </Grid>\n          <Grid item xs={12} >\n            <Box position=\"relative\" left=\"5%\">\n              <div className=\"stepOne\">\n                Step 1: Enter some informationrmation to start\n              </div>\n            </Box>\n          </Grid>\n          <Grid item xs={12}><Box position=\"relative\" left=\"5%\" ><EnterUID /></Box></Grid>\n          <Grid item xs={12}><Box position=\"relative\" left=\"5%\" ><EnterName /></Box></Grid>\n          <Grid item xs={12}><Box position=\"relative\" left=\"5%\" ><EnterInfo /></Box></Grid>\n          <Grid item xs={12} >\n            <Box position=\"relative\" left=\"5%\">\n              <br></br>\n              <br></br>\n              <br></br>\n              <div className=\"stepOne\">\n                Step 2: Add Locations\n              </div>\n            </Box>\n          </Grid>\n          <Grid item xs={6}>\n            <Box component=\"span\" position=\"relative\" left=\"5%\" background=\"white\" className=\"box-map\">\n              <MapWithAMarker\n                googleMapURL=\"https://maps.googleapis.com/maps/api/js?key=AIzaSyBsPi3wA_-SZVURg6_iBq8zz5mxW5UcHNo&v=3.exp&libraries=geometry,drawing,places\"\n                loadingElement={<div style={{ height: `100%` }} />}\n                containerElement={<div style={{ height: `400px` }} />}\n                mapElement={<div style={{ height: `100%` }} />}\n                className=\"map\"\n              />\n              <br></br>\n              <br></br>\n              <br></br>\n            </Box>\n          </Grid>\n\n          <Grid item xs={6} alignItems=\"center\">\n\n            <Box component=\"span\" position=\"relative\" right=\"5%\">\n              <h3 className=\"title-current\">Current Location Information</h3>\n              <Descriptions bordered={true} column={2} size={\"small\"} className='description-current' style={{ width: '85vh ' }}>\n                <Descriptions.Item label=\"Address\" span={2}>{this.state.address}</Descriptions.Item>\n                <Descriptions.Item label=\"Latitude\">{this.state.coordinates[0]}</Descriptions.Item>\n                <Descriptions.Item label=\"Longtitude\">{this.state.coordinates[1]}</Descriptions.Item>\n                <Descriptions.Item label=\"Place ID\" span={2}>{this.state.placeId}</Descriptions.Item>\n              </Descriptions>\n            </Box>\n\n            <br></br>\n\n            <Box position=\"relative\" left=\"40%\" top=\"5%\"><Button variant=\"contained\" startIcon={<AddIcon />} onClick={this.addLocation} className=\"button-add\">Add Location</Button></Box>\n          </Grid>\n\n          <Grid item xs={12} >\n            <Box position=\"relative\" left=\"5%\">\n              <br></br>\n              <br></br>\n              <div className=\"stepOne\">\n                Step 3: Upload to user\n              </div>\n            </Box>\n          </Grid>\n\n\n\n          <Grid item xs={12} >\n\n            <Box position=\"relative\" left=\"50%\">\n              <Button variant=\"contained\" startIcon={<CloudUploadIcon />} onClick={this.uploadLocations} >Upload</Button>\n              <Button variant=\"contained\" startIcon={<ClearAllIcon />} onClick={this.clearLocations}>Clear All</Button>\n\n            </Box>\n\n          </Grid>\n        </Grid>\n      </div>\n\n    );\n  }\n}\nexport default App;\n\nfunction EnterUID() {\n  const classes = useStyles();\n\n  const [input, setInput] = useState('');\n\n  const handleOnChange = (e) => {\n    setInput(e.target.value);\n  }\n\n  const handleOnSubmit = (e) => {\n    e.preventDefault();\n    uid = input;\n    let pre = 'sendData/';\n    path = pre.concat(uid);\n    console.log(path);\n    setInput('');\n    verification(uid);\n  }\n\n  return (\n    <div>\n\n      <form onSubmit={handleOnSubmit} className={classes.root}>\n        <TextField variant=\"outlined\" label=\"user id\" onChange={handleOnChange} value={input} type=\"text\" size=\"small\" ></TextField>\n        <Button variant=\"contained\" startIcon={<FingerprintIcon />} onClick={handleOnSubmit}>Update user id</Button>\n      </form>\n    </div>\n  )\n}\n\nfunction EnterName() {\n  const classes = useStyles();\n\n  const [input, setInput] = useState('');\n\n  const handleOnChange = (e) => {\n    setInput(e.target.value);\n  }\n\n  const handleOnSubmit = (e) => {\n    e.preventDefault();\n    nameOfUser = input;\n    console.log(nameOfUser);\n    setInput('');\n  }\n\n  return (\n    <div>\n\n      <form onSubmit={handleOnSubmit} className={classes.root}>\n        <TextField variant=\"outlined\" label=\"name\" onChange={handleOnChange} value={input} type=\"text\" size=\"small\" ></TextField>\n        <Button variant=\"contained\" startIcon={<PersonIcon />} onClick={handleOnSubmit}>Update name</Button>\n      </form>\n    </div>\n  )\n}\n\nfunction EnterInfo() {\n  const classes = useStyles();\n\n  const [input, setInput] = useState('');\n\n  const handleOnChange = (e) => {\n    setInput(e.target.value);\n  }\n\n  const handleOnSubmit = (e) => {\n    e.preventDefault();\n    information = input;\n    console.log(information);\n    setInput('');\n  }\n\n  return (\n    <div>\n\n      <form onSubmit={handleOnSubmit} className={classes.root}>\n        <TextField variant=\"outlined\" label=\"information\" onChange={handleOnChange} value={input} type=\"text\" size=\"small\" ></TextField>\n        <Button variant=\"contained\" startIcon={<InfoIcon />} onClick={handleOnSubmit}>Update Info</Button>\n      </form>\n    </div>\n  )\n}\n\nconst verification = (uid) => {\n  if (uid === \"\") {\n    isUserExist = false;\n    console.log(isUserExist);\n    return;\n  }\n  const pre = \"Users/\";\n  const userPath = pre.concat(uid);\n  var ref = firebase.database().ref(userPath);\n  ref.once(\"value\").then(function (snapshot) {\n    isUserExist = snapshot.exists();\n    console.log(isUserExist);\n  });\n}","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport 'antd/dist/antd.css'\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}