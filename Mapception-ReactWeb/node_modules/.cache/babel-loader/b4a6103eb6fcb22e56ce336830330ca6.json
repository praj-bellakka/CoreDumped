{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\leowy\\\\OneDrive\\\\Desktop\\\\React\\\\web1\\\\src\\\\App.js\";\nimport React from 'react';\nimport './App.css';\nimport Form from './components/Form';\nimport EnterUID from './components/uid';\nimport { InfoWindow, withScriptjs, withGoogleMap, GoogleMap, Marker } from \"react-google-maps\";\nimport Geocode from \"react-geocode\";\nimport { Descriptions } from 'antd';\nimport AutoComplete from \"react-google-autocomplete\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst apiKey = \"AIzaSyBsPi3wA_-SZVURg6_iBq8zz5mxW5UcHNo\";\nGeocode.setApiKey(apiKey);\n\nclass LocationPacket {\n  constructor(address, lat, lng, id) {\n    this.address = address;\n    this.condensedAddress = address;\n    this.coordinates = [lat, lng];\n    this.placeId = id;\n  }\n\n}\n\nclass App extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      address: \"\",\n      condensedAddress: \"\",\n      coordinates: [],\n      placeId: \"\",\n      zoom: 12,\n      height: 400,\n      mapPosition: {\n        lat: 0,\n        lng: 0\n      },\n      markerPosition: {\n        lat: 0,\n        lng: 0\n      }\n    };\n\n    this.onMarkerDragEnd = event => {\n      let newLat = event.latLng.lat();\n      let newLng = event.latLng.lng();\n      Geocode.fromLatLng(newLat, newLng).then(response => {\n        console.log('response', response);\n        const address = response.results[0].formatted_address;\n        const id = response.results[0].place_id;\n        const lat = response.results[0].geometry.location.lat;\n        const lng = response.results[0].geometry.location.lng;\n        const coordinates = [lat, lng];\n        this.createLocationPacket(address, lat, lng, id);\n        this.setState({\n          address: address ? address : \"\",\n          condensedAddress: address ? address : \"\",\n          coordinates: coordinates ? coordinates : \"\",\n          placeId: id ? id : \"\",\n          mapPosition: {\n            lat: lat,\n            lng: lng\n          },\n          markerPosition: {\n            lat: lat,\n            lng: lng\n          }\n        });\n      });\n    };\n\n    this.onPlaceSelected = place => {\n      console.log('place', place);\n      const address = place.formatted_address;\n      const id = place.place_id;\n      const lat = place.geometry.location.lat();\n      const lng = place.geometry.location.lng();\n      const coordinates = [lat, lng];\n      this.createLocationPacket(address, lat, lng, id);\n      this.setState({\n        address: address ? address : \"\",\n        condensedAddress: address ? address : \"\",\n        coordinates: coordinates ? coordinates : \"\",\n        placeId: id ? id : \"\",\n        mapPosition: {\n          lat: lat,\n          lng: lng\n        },\n        markerPosition: {\n          lat: lat,\n          lng: lng\n        }\n      });\n    };\n  }\n\n  createLocationPacket(address, lat, lng, id) {\n    let currentLocation = new LocationPacket(address, lat, lng, id);\n  }\n\n  componentDidMount() {\n    if (navigator.geolocation) {\n      navigator.geolocation.getCurrentPosition(position => {\n        console.log('position', navigator.geolocation);\n        this.setState({\n          mapPosition: {\n            lat: position.coords.latitude,\n            lng: position.coords.longitude\n          },\n          markerPosition: {\n            lat: position.coords.latitude,\n            lng: position.coords.longitude\n          }\n        }, () => {\n          Geocode.fromLatLng(position.coords.latitude, position.coords.longitude).then(response => {\n            console.log('response', response);\n            const address = response.results[0].formatted_address;\n            const id = response.results[0].place_id;\n            const lat = response.results[0].geometry.location.lat;\n            const lng = response.results[0].geometry.location.lng;\n            const coordinates = [lat, lng];\n            this.createLocationPacket(address, lat, lng, id);\n            this.setState({\n              address: address ? address : '',\n              condensedAddress: address ? address : \"\",\n              coordinates: coordinates ? coordinates : \"\",\n              placeId: id ? id : \"\"\n            });\n          }, error => {\n            console.error(error);\n          });\n        });\n      });\n    } else {\n      console.error(\"Geolocation is not supported by this browser!\");\n    }\n  }\n\n  render() {\n    const MapWithAMarker = withScriptjs(withGoogleMap(props => /*#__PURE__*/_jsxDEV(GoogleMap, {\n      defaultZoom: 11,\n      defaultCenter: {\n        lat: this.state.mapPosition.lat,\n        lng: this.state.mapPosition.lng\n      },\n      children: [/*#__PURE__*/_jsxDEV(Marker, {\n        draggable: true,\n        onDragEnd: this.onMarkerDragEnd,\n        position: {\n          lat: this.state.markerPosition.lat,\n          lng: this.state.mapPosition.lng\n        },\n        children: /*#__PURE__*/_jsxDEV(InfoWindow, {\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            children: this.state.address\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 172,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 171,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 166,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(AutoComplete, {\n        apiKey: apiKey,\n        style: {\n          width: \"100%\",\n          height: '40px',\n          paddindLeft: 16,\n          marginTop: 2,\n          marginBottom: '2rem'\n        },\n        onPlaceSelected: this.onPlaceSelected,\n        options: {\n          types: \"address\",\n          componentRestrictions: \"sg\"\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 179,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 162,\n      columnNumber: 7\n    }, this)));\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(MapWithAMarker, {\n        googleMapURL: \"https://maps.googleapis.com/maps/api/js?key=AIzaSyBsPi3wA_-SZVURg6_iBq8zz5mxW5UcHNo&v=3.exp&libraries=geometry,drawing,places\",\n        loadingElement: /*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            height: `100%`\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 195,\n          columnNumber: 25\n        }, this),\n        containerElement: /*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            height: `400px`\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 196,\n          columnNumber: 29\n        }, this),\n        mapElement: /*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            height: `100%`\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 197,\n          columnNumber: 23\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 193,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 200,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 201,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 202,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"Location Information\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 205,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Descriptions, {\n        bordered: true,\n        column: 8,\n        size: \"small\",\n        children: [/*#__PURE__*/_jsxDEV(Descriptions.Item, {\n          label: \"Address\",\n          children: this.state.address\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 207,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Descriptions.Item, {\n          label: \"Latitude\",\n          children: this.state.coordinates[0]\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 208,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Descriptions.Item, {\n          label: \"Longtitude\",\n          children: this.state.coordinates[1]\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 209,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Descriptions.Item, {\n          label: \"Place ID\",\n          children: this.state.placeId\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 210,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 206,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 214,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 215,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Form, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 216,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 192,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nexport default App;\n/*\nexport default function App() {\nconsole.log();\n  return (\n    <div>\n      <h1>Input UID here</h1>\n      <EnterUID />\n      <h1>Input locations here (first stop is start point):</h1>\n      <Form />\n    </div>\n  );\n}\n*/","map":{"version":3,"sources":["C:/Users/leowy/OneDrive/Desktop/React/web1/src/App.js"],"names":["React","Form","EnterUID","InfoWindow","withScriptjs","withGoogleMap","GoogleMap","Marker","Geocode","Descriptions","AutoComplete","apiKey","setApiKey","LocationPacket","constructor","address","lat","lng","id","condensedAddress","coordinates","placeId","App","Component","state","zoom","height","mapPosition","markerPosition","onMarkerDragEnd","event","newLat","latLng","newLng","fromLatLng","then","response","console","log","results","formatted_address","place_id","geometry","location","createLocationPacket","setState","onPlaceSelected","place","currentLocation","componentDidMount","navigator","geolocation","getCurrentPosition","position","coords","latitude","longitude","error","render","MapWithAMarker","props","width","paddindLeft","marginTop","marginBottom","types","componentRestrictions"],"mappings":"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","sourcesContent":["import React from 'react';\nimport './App.css';\nimport Form from './components/Form'\nimport EnterUID from './components/uid';\nimport {\n  InfoWindow,\n  withScriptjs,\n  withGoogleMap,\n  GoogleMap,\n  Marker,\n} from \"react-google-maps\";\nimport Geocode from \"react-geocode\";\nimport { Descriptions } from 'antd';\nimport AutoComplete from \"react-google-autocomplete\";\n\nconst apiKey = \"AIzaSyBsPi3wA_-SZVURg6_iBq8zz5mxW5UcHNo\";\n\nGeocode.setApiKey(apiKey);  \n\nclass LocationPacket {\n  constructor (address, lat, lng, id) {\n    this.address = address;\n    this.condensedAddress = address;\n    this.coordinates = [lat, lng];\n    this.placeId = id;\n  }\n}\n\n\n\n\nclass App extends React.Component {\n  state = {\n    address: \"\",\n    condensedAddress: \"\",\n    coordinates: [],\n    placeId: \"\",\n    zoom: 12,\n    height: 400,\n    mapPosition: {\n      lat: 0,\n      lng: 0,\n    },\n    markerPosition: {\n      lat: 0,\n      lng: 0,\n    }\n  }\n\n  createLocationPacket(address, lat, lng, id) {\n    let currentLocation = new LocationPacket(address, lat, lng, id);\n  }\n\n\n  componentDidMount() {\n    if (navigator.geolocation) {\n      navigator.geolocation.getCurrentPosition(position => {\n        console.log('position', navigator.geolocation);\n        this.setState({\n          mapPosition: {\n            lat: position.coords.latitude,\n            lng: position.coords.longitude,\n          },\n          markerPosition: {\n            lat: position.coords.latitude,\n            lng: position.coords.longitude,\n          }\n        },\n          () => {\n            Geocode.fromLatLng(position.coords.latitude, position.coords.longitude).then(\n              response => {\n                console.log('response', response);\n                const address = response.results[0].formatted_address;\n                const id = response.results[0].place_id;\n                const lat = response.results[0].geometry.location.lat;\n                const lng = response.results[0].geometry.location.lng;\n                const coordinates = [lat, lng];\n\n                this.createLocationPacket(address, lat, lng, id);\n\n                this.setState({\n                  address: (address) ? address : '',\n                  condensedAddress: (address) ? address : \"\",\n                  coordinates: (coordinates) ? coordinates : \"\",\n                  placeId: (id) ? id : \"\"\n                })\n              },\n              error => {\n                console.error(error);\n              }\n            );\n\n          })\n      });\n    } else {\n      console.error(\"Geolocation is not supported by this browser!\");\n    }\n  };\n  \n\n\n  onMarkerDragEnd = (event) => {\n    let newLat = event.latLng.lat();\n    let newLng = event.latLng.lng();\n\n    Geocode.fromLatLng(newLat, newLng).then(response => {\n      console.log('response', response);\n      const address = response.results[0].formatted_address;\n      const id = response.results[0].place_id;\n      const lat = response.results[0].geometry.location.lat;\n      const lng = response.results[0].geometry.location.lng;\n      const coordinates = [lat, lng];\n\n      this.createLocationPacket(address, lat, lng, id);\n\n      this.setState({\n        address: (address) ? address : \"\",\n        condensedAddress: (address) ? address : \"\",\n        coordinates: (coordinates) ? coordinates : \"\",\n        placeId: (id) ? id : \"\",\n        mapPosition: {\n          lat: lat,\n          lng: lng\n        },\n        markerPosition: {\n          lat: lat,\n          lng: lng\n        }\n      })\n    });\n  }\n\n  onPlaceSelected = (place) => {\n    console.log('place', place);\n    const address = place.formatted_address;\n    const id = place.place_id;\n    const lat = place.geometry.location.lat();\n    const lng = place.geometry.location.lng();\n    const coordinates = [lat, lng];\n\n    this.createLocationPacket(address, lat, lng, id);\n\n    this.setState({\n      address: (address) ? address : \"\",\n      condensedAddress: (address) ? address : \"\",\n      coordinates: (coordinates) ? coordinates : \"\",\n      placeId: (id) ? id : \"\",\n      mapPosition: {\n        lat: lat,\n        lng: lng\n      },\n      markerPosition: {\n        lat: lat,\n        lng: lng\n      }\n    })\n\n  };\n\n  render() {\n    const MapWithAMarker = withScriptjs(withGoogleMap(props =>\n      <GoogleMap\n        defaultZoom={11}\n        defaultCenter={{ lat: this.state.mapPosition.lat, lng: this.state.mapPosition.lng }}\n      >\n        <Marker\n          draggable={true}\n          onDragEnd={this.onMarkerDragEnd}\n          position={{ lat: this.state.markerPosition.lat, lng: this.state.mapPosition.lng }}\n        >\n          <InfoWindow>\n            <div>{this.state.address}</div>\n          </InfoWindow>\n        </Marker>\n\n          \n\n\n        <AutoComplete\n          \n          apiKey={apiKey}\n          style={{ width: \"100%\", height: '40px', paddindLeft: 16, marginTop: 2, marginBottom: '2rem' }}\n\n          onPlaceSelected={this.onPlaceSelected}\n          options={{ types: \"address\", componentRestrictions: \"sg\" }}\n\n        />\n      </GoogleMap>\n    ));\n\n    return (\n      <div>\n      <MapWithAMarker\n        googleMapURL=\"https://maps.googleapis.com/maps/api/js?key=AIzaSyBsPi3wA_-SZVURg6_iBq8zz5mxW5UcHNo&v=3.exp&libraries=geometry,drawing,places\"\n        loadingElement={<div style={{ height: `100%` }} />}\n          containerElement={<div style={{ height: `400px` }} />}\n          mapElement={<div style={{ height: `100%` }} />}\n        />\n\n        <br />\n        <br />\n        <br />\n\n\n        <h3>Location Information</h3>\n        <Descriptions  bordered={true} column={8} size={\"small\"}>\n          <Descriptions.Item label=\"Address\">{this.state.address}</Descriptions.Item>\n          <Descriptions.Item label=\"Latitude\">{this.state.coordinates[0]}</Descriptions.Item>\n          <Descriptions.Item label=\"Longtitude\">{this.state.coordinates[1]}</Descriptions.Item>\n          <Descriptions.Item label=\"Place ID\">{this.state.placeId}</Descriptions.Item>\n        </Descriptions>\n\n   \n        <br />\n        <br />\n        <Form />\n\n\n\n\n      </div>\n\n\n\n\n\n    );\n  }\n}\n\nexport default App;\n\n\n\n\n\n/*\nexport default function App() {\nconsole.log();\n  return (\n    <div>\n      <h1>Input UID here</h1>\n      <EnterUID />\n      <h1>Input locations here (first stop is start point):</h1>\n      <Form />\n    </div>\n  );\n}\n*/"]},"metadata":{},"sourceType":"module"}