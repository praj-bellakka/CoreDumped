{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\leowy\\\\OneDrive\\\\Desktop\\\\React\\\\web1\\\\src\\\\App.js\";\nimport React, { useState } from 'react';\nimport './App.css';\nimport Form from './components/Form';\nimport EnterUID from './components/uid';\nimport { InfoWindow, withScriptjs, withGoogleMap, GoogleMap, Marker } from \"react-google-maps\";\nimport Geocode from \"react-geocode\";\nimport { Descriptions } from 'antd';\nimport AutoComplete from \"react-google-autocomplete\";\nimport firebase from './utils/firebase'; //global variables\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst apiKey = \"AIzaSyBsPi3wA_-SZVURg6_iBq8zz5mxW5UcHNo\";\nvar index = 0;\nvar mapList = [];\nGeocode.setApiKey(apiKey);\n\nconst addLocation = () => {\n  createLocationPacket();\n  const location = {\n    address: this.state.address,\n    condensedName: this.state.address,\n    coordinates: this.state.coordinates,\n    placeId: this.state.placeId\n  };\n  mapList[index] = location;\n  index++;\n};\n\nconst clearLocations = () => {\n  index = 0;\n  mapList = [];\n};\n\nconst uploadLocations = () => {\n  //let pre = 'User/';\n  //let uid = 'xfukae1s4xSSWiHClQDEAMOPrGW2';\n  //let path = pre.concat(uid); \n  //console.log(path);\n  //const path = \"Users/xfukae1s4xSSWiHClQDEAMOPrGW2\" //to update UID\n  const path = \"sendData/xfukae1s4xSSWiHClQDEAMOPrGW2\"; //to update UID\n\n  const locationRef = firebase.database().ref(path);\n  const locationList = {\n    mapList\n  };\n  locationRef.push(locationList);\n};\n\nclass App extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      address: \"\",\n      condensedAddress: \"\",\n      coordinates: [],\n      placeId: \"\",\n      zoom: 12,\n      height: 400,\n      mapPosition: {\n        lat: 0,\n        lng: 0\n      },\n      markerPosition: {\n        lat: 0,\n        lng: 0\n      }\n    };\n\n    this.onMarkerDragEnd = event => {\n      let newLat = event.latLng.lat();\n      let newLng = event.latLng.lng();\n      Geocode.fromLatLng(newLat, newLng).then(response => {\n        console.log('response', response);\n        const address = response.results[0].formatted_address;\n        const id = response.results[0].place_id;\n        const lat = response.results[0].geometry.location.lat;\n        const lng = response.results[0].geometry.location.lng;\n        const coordinates = [lat, lng];\n        this.setState({\n          address: address ? address : \"\",\n          condensedAddress: address ? address : \"\",\n          coordinates: coordinates ? coordinates : \"\",\n          placeId: id ? id : \"\",\n          mapPosition: {\n            lat: lat,\n            lng: lng\n          },\n          markerPosition: {\n            lat: lat,\n            lng: lng\n          }\n        });\n      });\n    };\n\n    this.onPlaceSelected = place => {\n      console.log('place', place);\n      const address = place.formatted_address;\n      const id = place.place_id;\n      const lat = place.geometry.location.lat();\n      const lng = place.geometry.location.lng();\n      const coordinates = [lat, lng];\n      this.setState({\n        address: address ? address : \"\",\n        condensedAddress: address ? address : \"\",\n        coordinates: coordinates ? coordinates : \"\",\n        placeId: id ? id : \"\",\n        mapPosition: {\n          lat: lat,\n          lng: lng\n        },\n        markerPosition: {\n          lat: lat,\n          lng: lng\n        }\n      });\n    };\n\n    this.addLocation = () => {\n      const location = {\n        address: this.state.address,\n        condensedName: this.state.address,\n        coordinates: this.state.coordinates,\n        placeId: this.state.placeId\n      };\n      mapList[index] = location;\n      index++;\n    };\n  }\n\n  componentDidMount() {\n    if (navigator.geolocation) {\n      navigator.geolocation.getCurrentPosition(position => {\n        console.log('position', navigator.geolocation);\n        this.setState({\n          mapPosition: {\n            lat: position.coords.latitude,\n            lng: position.coords.longitude\n          },\n          markerPosition: {\n            lat: position.coords.latitude,\n            lng: position.coords.longitude\n          }\n        }, () => {\n          Geocode.fromLatLng(position.coords.latitude, position.coords.longitude).then(response => {\n            console.log('response', response);\n            const address = response.results[0].formatted_address;\n            const id = response.results[0].place_id;\n            const lat = response.results[0].geometry.location.lat;\n            const lng = response.results[0].geometry.location.lng;\n            const coordinates = [lat, lng];\n            this.setState({\n              address: address ? address : '',\n              condensedAddress: address ? address : \"\",\n              coordinates: coordinates ? coordinates : \"\",\n              placeId: id ? id : \"\"\n            });\n          }, error => {\n            console.error(error);\n          });\n        });\n      });\n    } else {\n      console.error(\"Geolocation is not supported by this browser!\");\n    }\n  }\n\n  render() {\n    const MapWithAMarker = withScriptjs(withGoogleMap(props => /*#__PURE__*/_jsxDEV(GoogleMap, {\n      defaultZoom: 11,\n      defaultCenter: {\n        lat: this.state.mapPosition.lat,\n        lng: this.state.mapPosition.lng\n      },\n      children: [/*#__PURE__*/_jsxDEV(Marker, {\n        draggable: true,\n        onDragEnd: this.onMarkerDragEnd,\n        position: {\n          lat: this.state.markerPosition.lat,\n          lng: this.state.mapPosition.lng\n        },\n        children: /*#__PURE__*/_jsxDEV(InfoWindow, {\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            children: this.state.address\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 194,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 193,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 188,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(AutoComplete, {\n        apiKey: apiKey,\n        style: {\n          width: \"100%\",\n          height: '40px',\n          paddindLeft: 16,\n          marginTop: 2,\n          marginBottom: '2rem'\n        },\n        onPlaceSelected: this.onPlaceSelected,\n        options: {\n          types: \"address\",\n          componentRestrictions: \"sg\"\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 197,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 184,\n      columnNumber: 7\n    }, this)));\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(MapWithAMarker, {\n        googleMapURL: \"https://maps.googleapis.com/maps/api/js?key=AIzaSyBsPi3wA_-SZVURg6_iBq8zz5mxW5UcHNo&v=3.exp&libraries=geometry,drawing,places\",\n        loadingElement: /*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            height: `100%`\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 211,\n          columnNumber: 25\n        }, this),\n        containerElement: /*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            height: `400px`\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 212,\n          columnNumber: 29\n        }, this),\n        mapElement: /*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            height: `100%`\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 213,\n          columnNumber: 23\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 209,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 216,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 217,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 218,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"Location Information\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 221,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Descriptions, {\n        bordered: true,\n        column: 10,\n        size: \"small\",\n        children: [/*#__PURE__*/_jsxDEV(Descriptions.Item, {\n          label: \"Address\",\n          children: this.state.address\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 223,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Descriptions.Item, {\n          label: \"Latitude\",\n          children: this.state.coordinates[0]\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 224,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Descriptions.Item, {\n          label: \"Longtitude\",\n          children: this.state.coordinates[1]\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 225,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Descriptions.Item, {\n          label: \"Place ID\",\n          children: this.state.placeId\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 226,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 222,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 229,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 230,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: addLocation,\n        children: \"Add Location\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 232,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: clearLocations,\n        children: \"Clear Locations\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 233,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: uploadLocations,\n        children: \"Upload Locations\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 234,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 208,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["C:/Users/leowy/OneDrive/Desktop/React/web1/src/App.js"],"names":["React","useState","Form","EnterUID","InfoWindow","withScriptjs","withGoogleMap","GoogleMap","Marker","Geocode","Descriptions","AutoComplete","firebase","apiKey","index","mapList","setApiKey","addLocation","createLocationPacket","location","address","state","condensedName","coordinates","placeId","clearLocations","uploadLocations","path","locationRef","database","ref","locationList","push","App","Component","condensedAddress","zoom","height","mapPosition","lat","lng","markerPosition","onMarkerDragEnd","event","newLat","latLng","newLng","fromLatLng","then","response","console","log","results","formatted_address","id","place_id","geometry","setState","onPlaceSelected","place","componentDidMount","navigator","geolocation","getCurrentPosition","position","coords","latitude","longitude","error","render","MapWithAMarker","props","width","paddindLeft","marginTop","marginBottom","types","componentRestrictions"],"mappings":"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","sourcesContent":["import React, {useState} from 'react';\nimport './App.css';\nimport Form from './components/Form'\nimport EnterUID from './components/uid';\nimport {\n  InfoWindow,\n  withScriptjs,\n  withGoogleMap,\n  GoogleMap,\n  Marker,\n} from \"react-google-maps\";\nimport Geocode from \"react-geocode\";\nimport { Descriptions } from 'antd';\nimport AutoComplete from \"react-google-autocomplete\";\nimport firebase from './utils/firebase';\n\n//global variables\nconst apiKey = \"AIzaSyBsPi3wA_-SZVURg6_iBq8zz5mxW5UcHNo\";\nvar index = 0;\nvar mapList = [];\n\nGeocode.setApiKey(apiKey);  \n\nconst addLocation = () => {\n  createLocationPacket();\n  const location = {\n    address: this.state.address,\n    condensedName: this.state.address,\n    coordinates: this.state.coordinates,\n    placeId: this.state.placeId,\n  }\n  mapList[index] = location;\n  index++;\n}\n\nconst clearLocations = () => {\n  index = 0;\n  mapList = [];\n}\n\nconst uploadLocations = () => {\n\t\t//let pre = 'User/';\n\t\t//let uid = 'xfukae1s4xSSWiHClQDEAMOPrGW2';\n\t\t//let path = pre.concat(uid); \n\t\t//console.log(path);\n\t\t//const path = \"Users/xfukae1s4xSSWiHClQDEAMOPrGW2\" //to update UID\n\t\tconst path = \"sendData/xfukae1s4xSSWiHClQDEAMOPrGW2\" //to update UID\n\t\tconst locationRef = firebase.database().ref(path);\n\t\tconst locationList = {\n\t\t\tmapList\n\t\t};\n\t\tlocationRef.push(locationList);\n\t}\n\nclass App extends React.Component {\n  state = {\n    address: \"\",\n    condensedAddress: \"\",\n    coordinates: [],\n    placeId: \"\",\n    zoom: 12,\n    height: 400,\n    mapPosition: {\n      lat: 0,\n      lng: 0,\n    },\n    markerPosition: {\n      lat: 0,\n      lng: 0,\n    }\n  }\n\n\n  componentDidMount() {\n    if (navigator.geolocation) {\n      navigator.geolocation.getCurrentPosition(position => {\n        console.log('position', navigator.geolocation);\n        this.setState({\n          mapPosition: {\n            lat: position.coords.latitude,\n            lng: position.coords.longitude,\n          },\n          markerPosition: {\n            lat: position.coords.latitude,\n            lng: position.coords.longitude,\n          }\n        },\n          () => {\n            Geocode.fromLatLng(position.coords.latitude, position.coords.longitude).then(\n              response => {\n                console.log('response', response);\n                const address = response.results[0].formatted_address;\n                const id = response.results[0].place_id;\n                const lat = response.results[0].geometry.location.lat;\n                const lng = response.results[0].geometry.location.lng;\n                const coordinates = [lat, lng];\n\n                this.setState({\n                  address: (address) ? address : '',\n                  condensedAddress: (address) ? address : \"\",\n                  coordinates: (coordinates) ? coordinates : \"\",\n                  placeId: (id) ? id : \"\"\n                })\n              },\n              error => {\n                console.error(error);\n              }\n            );\n\n          })\n      });\n    } else {\n      console.error(\"Geolocation is not supported by this browser!\");\n    }\n  };\n\n  onMarkerDragEnd = (event) => {\n    let newLat = event.latLng.lat();\n    let newLng = event.latLng.lng();\n\n    Geocode.fromLatLng(newLat, newLng).then(response => {\n      console.log('response', response);\n      const address = response.results[0].formatted_address;\n      const id = response.results[0].place_id;\n      const lat = response.results[0].geometry.location.lat;\n      const lng = response.results[0].geometry.location.lng;\n      const coordinates = [lat, lng];\n\n      this.setState({\n        address: (address) ? address : \"\",\n        condensedAddress: (address) ? address : \"\",\n        coordinates: (coordinates) ? coordinates : \"\",\n        placeId: (id) ? id : \"\",\n        mapPosition: {\n          lat: lat,\n          lng: lng\n        },\n        markerPosition: {\n          lat: lat,\n          lng: lng\n        }\n      })\n    });\n  }\n\n  onPlaceSelected = (place) => {\n    console.log('place', place);\n    const address = place.formatted_address;\n    const id = place.place_id;\n    const lat = place.geometry.location.lat();\n    const lng = place.geometry.location.lng();\n    const coordinates = [lat, lng];\n\n    this.setState({\n      address: (address) ? address : \"\",\n      condensedAddress: (address) ? address : \"\",\n      coordinates: (coordinates) ? coordinates : \"\",\n      placeId: (id) ? id : \"\",\n      mapPosition: {\n        lat: lat,\n        lng: lng\n      },\n      markerPosition: {\n        lat: lat,\n        lng: lng\n      }\n    })\n\n  };\n\n\taddLocation = () => {\n\t\tconst location = {\n\t\t\taddress: this.state.address,\n\t\t\tcondensedName: this.state.address,\n\t\t\tcoordinates: this.state.coordinates,\n\t\t\tplaceId: this.state.placeId,\n\t\t}\n\t\tmapList[index] = location;\n\t\tindex++;\n\t}\n\n  render() {\n    const MapWithAMarker = withScriptjs(withGoogleMap(props =>\n      <GoogleMap\n        defaultZoom={11}\n        defaultCenter={{ lat: this.state.mapPosition.lat, lng: this.state.mapPosition.lng }}\n      >\n        <Marker\n          draggable={true}\n          onDragEnd={this.onMarkerDragEnd}\n          position={{ lat: this.state.markerPosition.lat, lng: this.state.mapPosition.lng }}\n        >\n          <InfoWindow>\n            <div>{this.state.address}</div>\n          </InfoWindow>\n        </Marker>\n        <AutoComplete\n          apiKey={apiKey}\n          style={{ width: \"100%\", height: '40px', paddindLeft: 16, marginTop: 2, marginBottom: '2rem' }}\n          onPlaceSelected={this.onPlaceSelected}\n          options={{ types: \"address\", componentRestrictions: \"sg\" }}\n        />\n      </GoogleMap>\n\n    ));\n\n    return (\n      <div>\n      <MapWithAMarker\n        googleMapURL=\"https://maps.googleapis.com/maps/api/js?key=AIzaSyBsPi3wA_-SZVURg6_iBq8zz5mxW5UcHNo&v=3.exp&libraries=geometry,drawing,places\"\n        loadingElement={<div style={{ height: `100%` }} />}\n          containerElement={<div style={{ height: `400px` }} />}\n          mapElement={<div style={{ height: `100%` }} />}\n        />\n\n        <br />\n        <br />\n        <br />\n\n\n        <h3>Location Information</h3>\n        <Descriptions  bordered={true} column={10} size={\"small\"}>\n          <Descriptions.Item label=\"Address\">{this.state.address}</Descriptions.Item>\n          <Descriptions.Item label=\"Latitude\">{this.state.coordinates[0]}</Descriptions.Item>\n          <Descriptions.Item label=\"Longtitude\">{this.state.coordinates[1]}</Descriptions.Item>\n          <Descriptions.Item label=\"Place ID\">{this.state.placeId}</Descriptions.Item>\n        </Descriptions>\n   \n        <br />\n        <br />\n\n        <button onClick={addLocation}>Add Location</button>\n        <button onClick={clearLocations}>Clear Locations</button>\n        <button onClick={uploadLocations}>Upload Locations</button>\n      </div>\n\n    );\n  }\n}\nexport default App;\n\n\n"]},"metadata":{},"sourceType":"module"}