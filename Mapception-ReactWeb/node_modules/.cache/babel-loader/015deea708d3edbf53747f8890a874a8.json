{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\leowy\\\\OneDrive\\\\Desktop\\\\React\\\\web1\\\\src\\\\App.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport './App.css';\nimport { InfoWindow, withScriptjs, withGoogleMap, GoogleMap, Marker } from \"react-google-maps\";\nimport Geocode from \"react-geocode\";\nimport { Descriptions } from 'antd';\nimport AutoComplete from \"react-google-autocomplete\";\nimport firebase from './utils/firebase';\nimport { Container, Button, TextField, Grid } from '@material-ui/core';\nimport CloudUploadIcon from '@material-ui/icons/CloudUpload';\nimport ClearAllIcon from '@material-ui/icons/ClearAll';\nimport FingerprintIcon from '@material-ui/icons/Fingerprint';\nimport AddIcon from '@material-ui/icons/Add'; //global variables\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst apiKey = \"AIzaSyBsPi3wA_-SZVURg6_iBq8zz5mxW5UcHNo\";\nvar index = 0;\nvar mapList = [];\nvar curr_address = '';\nvar curr_coordinates = [];\nvar curr_placeID = '';\nvar path = '';\nvar uid = '';\nvar isUserExist = false;\nGeocode.setApiKey(apiKey);\n\nclass App extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      address: \"\",\n      condensedAddress: \"\",\n      coordinates: [],\n      placeId: \"\",\n      zoom: 12,\n      height: 400,\n      mapPosition: {\n        lat: 0,\n        lng: 0\n      },\n      markerPosition: {\n        lat: 0,\n        lng: 0\n      }\n    };\n\n    this.onMarkerDragEnd = event => {\n      let newLat = event.latLng.lat();\n      let newLng = event.latLng.lng();\n      Geocode.fromLatLng(newLat, newLng).then(response => {\n        console.log('response', response);\n        const address = response.results[0].formatted_address;\n        const id = response.results[0].place_id;\n        const lat = response.results[0].geometry.location.lat;\n        const lng = response.results[0].geometry.location.lng;\n        const coordinates = [lat, lng];\n        curr_address = address;\n        curr_coordinates = coordinates;\n        curr_placeID = id;\n        this.setState({\n          address: address ? address : \"\",\n          condensedAddress: address ? address : \"\",\n          coordinates: coordinates ? coordinates : \"\",\n          placeId: id ? id : \"\",\n          mapPosition: {\n            lat: lat,\n            lng: lng\n          },\n          markerPosition: {\n            lat: lat,\n            lng: lng\n          }\n        });\n      });\n    };\n\n    this.onPlaceSelected = place => {\n      console.log('place', place);\n      const address = place.formatted_address;\n      const id = place.place_id;\n      const lat = place.geometry.location.lat();\n      const lng = place.geometry.location.lng();\n      const coordinates = [lat, lng];\n      curr_address = address;\n      curr_coordinates = coordinates;\n      curr_placeID = id;\n      this.setState({\n        address: address ? address : \"\",\n        condensedAddress: address ? address : \"\",\n        coordinates: coordinates ? coordinates : \"\",\n        placeId: id ? id : \"\",\n        mapPosition: {\n          lat: lat,\n          lng: lng\n        },\n        markerPosition: {\n          lat: lat,\n          lng: lng\n        }\n      });\n    };\n\n    this.clearLocations = () => {\n      index = 0;\n      mapList = [];\n    };\n\n    this.uploadLocations = () => {\n      var currentPath = path;\n      console.log('currentPath', currentPath);\n      var numberOfLocations = index + 1;\n\n      if (currentPath) {\n        const locationRef = firebase.database().ref(currentPath);\n        const dataPacket = {\n          mapList,\n          numberOfLocations\n        };\n        locationRef.push(dataPacket);\n        this.clearLocations();\n        console.log(\"uploaded\");\n      } else {\n        console.log(\"invalid path\");\n      }\n    };\n  }\n\n  componentDidMount() {\n    if (navigator.geolocation) {\n      navigator.geolocation.getCurrentPosition(position => {\n        console.log('position', navigator.geolocation);\n        this.setState({\n          mapPosition: {\n            lat: position.coords.latitude,\n            lng: position.coords.longitude\n          },\n          markerPosition: {\n            lat: position.coords.latitude,\n            lng: position.coords.longitude\n          }\n        }, () => {\n          Geocode.fromLatLng(position.coords.latitude, position.coords.longitude).then(response => {\n            console.log('response', response);\n            const address = response.results[0].formatted_address;\n            const id = response.results[0].place_id;\n            const lat = response.results[0].geometry.location.lat;\n            const lng = response.results[0].geometry.location.lng;\n            const coordinates = [lat, lng];\n            curr_address = address;\n            curr_coordinates = coordinates;\n            curr_placeID = id;\n            this.setState({\n              address: address ? address : '',\n              condensedAddress: address ? address : \"\",\n              coordinates: coordinates ? coordinates : \"\",\n              placeId: id ? id : \"\"\n            });\n          }, error => {\n            console.error(error);\n          });\n        });\n      });\n    } else {\n      console.error(\"Geolocation is not supported by this browser!\");\n    }\n  }\n\n  addLocation() {\n    const location = {\n      address: curr_address,\n      condensedName: curr_address,\n      coordinates: curr_coordinates,\n      placeId: curr_placeID\n    };\n    mapList[index] = location;\n    index = index + 1;\n    console.log(index);\n  }\n\n  render() {\n    const MapWithAMarker = withScriptjs(withGoogleMap(props => /*#__PURE__*/_jsxDEV(GoogleMap, {\n      defaultZoom: 11,\n      defaultCenter: {\n        lat: this.state.mapPosition.lat,\n        lng: this.state.mapPosition.lng\n      },\n      className: \"map\",\n      style: {\n        width: '80%'\n      },\n      children: [/*#__PURE__*/_jsxDEV(Marker, {\n        draggable: true,\n        onDragEnd: this.onMarkerDragEnd,\n        position: {\n          lat: this.state.markerPosition.lat,\n          lng: this.state.mapPosition.lng\n        },\n        children: /*#__PURE__*/_jsxDEV(InfoWindow, {\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            children: this.state.address\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 220,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 219,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 214,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(AutoComplete, {\n        apiKey: apiKey,\n        style: {\n          width: \"100%\",\n          height: '40px',\n          paddindLeft: 16,\n          marginTop: 2,\n          marginBottom: '2rem'\n        },\n        onPlaceSelected: this.onPlaceSelected,\n        options: {\n          types: \"address\",\n          componentRestrictions: {\n            country: \"sg\"\n          }\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 223,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 207,\n      columnNumber: 7\n    }, this)));\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(Grid, {\n        container: true,\n        spacing: 1,\n        children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n          className: \"title-dashboard\",\n          children: \"Welcome to MAPCEPTION's dashboard\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 236,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(EnterUID, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 238,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(Container, {\n          maxWidth: \"sm\",\n          children: /*#__PURE__*/_jsxDEV(MapWithAMarker, {\n            googleMapURL: \"https://maps.googleapis.com/maps/api/js?key=AIzaSyBsPi3wA_-SZVURg6_iBq8zz5mxW5UcHNo&v=3.exp&libraries=geometry,drawing,places\",\n            loadingElement: /*#__PURE__*/_jsxDEV(\"div\", {\n              style: {\n                height: `100%`\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 242,\n              columnNumber: 29\n            }, this),\n            containerElement: /*#__PURE__*/_jsxDEV(\"div\", {\n              style: {\n                height: `400px`\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 243,\n              columnNumber: 31\n            }, this),\n            mapElement: /*#__PURE__*/_jsxDEV(\"div\", {\n              style: {\n                height: `100%`\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 244,\n              columnNumber: 25\n            }, this),\n            className: \"map\",\n            style: {\n              width: '80%'\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 240,\n            columnNumber: 11\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 239,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 251,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 252,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(Container, {\n          fixed: true,\n          children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n            className: \"title-current\",\n            children: \"Current Location Information\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 256,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(Descriptions, {\n            bordered: true,\n            column: 2,\n            size: \"small\",\n            className: \"description-current\",\n            style: {\n              width: '85vh '\n            },\n            children: [/*#__PURE__*/_jsxDEV(Descriptions.Item, {\n              label: \"Address\",\n              span: 2,\n              children: this.state.address\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 258,\n              columnNumber: 14\n            }, this), /*#__PURE__*/_jsxDEV(Descriptions.Item, {\n              label: \"Latitude\",\n              children: this.state.coordinates[0]\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 259,\n              columnNumber: 13\n            }, this), /*#__PURE__*/_jsxDEV(Descriptions.Item, {\n              label: \"Longtitude\",\n              children: this.state.coordinates[1]\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 260,\n              columnNumber: 13\n            }, this), /*#__PURE__*/_jsxDEV(Descriptions.Item, {\n              label: \"Place ID\",\n              span: 2,\n              children: this.state.placeId\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 261,\n              columnNumber: 13\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 257,\n            columnNumber: 11\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 255,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 265,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 266,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          variant: \"contained\",\n          startIcon: /*#__PURE__*/_jsxDEV(AddIcon, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 270,\n            columnNumber: 48\n          }, this),\n          onClick: this.addLocation,\n          children: \"Add Location\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 270,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 271,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 272,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 273,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          variant: \"contained\",\n          startIcon: /*#__PURE__*/_jsxDEV(CloudUploadIcon, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 277,\n            columnNumber: 48\n          }, this),\n          onClick: this.uploadLocations,\n          children: \"Upload\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 277,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          variant: \"contained\",\n          startIcon: /*#__PURE__*/_jsxDEV(ClearAllIcon, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 278,\n            columnNumber: 48\n          }, this),\n          onClick: this.clearLocations,\n          children: \"Upload\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 278,\n          columnNumber: 9\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 235,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 234,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nexport default App;\n\nfunction EnterUID() {\n  _s();\n\n  const [input, setInput] = useState('');\n\n  const handleOnChange = e => {\n    setInput(e.target.value);\n  };\n\n  const handleOnSubmit = e => {\n    e.preventDefault();\n    uid = input;\n    let pre = 'sendData/'; //let uid = 'xfukae1s4xSSWiHClQDEAMOPrGW2';\n\n    path = pre.concat(uid);\n    console.log(path);\n    setInput('');\n    verification(uid);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleOnSubmit,\n      children: [/*#__PURE__*/_jsxDEV(TextField, {\n        variant: \"outlined\",\n        label: \"user id\",\n        onChange: handleOnChange,\n        value: input,\n        type: \"text\",\n        size: \"small\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 318,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        variant: \"contained\",\n        startIcon: /*#__PURE__*/_jsxDEV(FingerprintIcon, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 319,\n          columnNumber: 48\n        }, this),\n        onClick: handleOnSubmit,\n        children: \"Enter user id\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 319,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 307,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 306,\n    columnNumber: 3\n  }, this);\n}\n\n_s(EnterUID, \"D4u6eRDEpR0Amfq2wMT385FdAkk=\");\n\n_c = EnterUID;\n\nconst verification = uid => {\n  if (uid === \"\") {\n    isUserExist = false;\n    console.log(isUserExist);\n    return;\n  }\n\n  const pre = \"Users/\";\n  const userPath = pre.concat(uid);\n  var ref = firebase.database().ref(userPath);\n  ref.once(\"value\").then(function (snapshot) {\n    isUserExist = snapshot.exists();\n    console.log(isUserExist);\n  });\n};\n\nvar _c;\n\n$RefreshReg$(_c, \"EnterUID\");","map":{"version":3,"sources":["C:/Users/leowy/OneDrive/Desktop/React/web1/src/App.js"],"names":["React","useState","InfoWindow","withScriptjs","withGoogleMap","GoogleMap","Marker","Geocode","Descriptions","AutoComplete","firebase","Container","Button","TextField","Grid","CloudUploadIcon","ClearAllIcon","FingerprintIcon","AddIcon","apiKey","index","mapList","curr_address","curr_coordinates","curr_placeID","path","uid","isUserExist","setApiKey","App","Component","state","address","condensedAddress","coordinates","placeId","zoom","height","mapPosition","lat","lng","markerPosition","onMarkerDragEnd","event","newLat","latLng","newLng","fromLatLng","then","response","console","log","results","formatted_address","id","place_id","geometry","location","setState","onPlaceSelected","place","clearLocations","uploadLocations","currentPath","numberOfLocations","locationRef","database","ref","dataPacket","push","componentDidMount","navigator","geolocation","getCurrentPosition","position","coords","latitude","longitude","error","addLocation","condensedName","render","MapWithAMarker","props","width","paddindLeft","marginTop","marginBottom","types","componentRestrictions","country","EnterUID","input","setInput","handleOnChange","e","target","value","handleOnSubmit","preventDefault","pre","concat","verification","userPath","once","snapshot","exists"],"mappings":"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","sourcesContent":["import React, { useState } from 'react';\nimport './App.css';\nimport {\n  InfoWindow,\n  withScriptjs,\n  withGoogleMap,\n  GoogleMap,\n  Marker,\n} from \"react-google-maps\";\nimport Geocode from \"react-geocode\";\nimport { Descriptions } from 'antd';\nimport AutoComplete from \"react-google-autocomplete\";\nimport firebase from './utils/firebase';\nimport { Container, Button, TextField, Grid } from '@material-ui/core';\nimport CloudUploadIcon from '@material-ui/icons/CloudUpload';\nimport ClearAllIcon from '@material-ui/icons/ClearAll';\nimport FingerprintIcon from '@material-ui/icons/Fingerprint';\nimport AddIcon from '@material-ui/icons/Add';\n\n//global variables\nconst apiKey = \"AIzaSyBsPi3wA_-SZVURg6_iBq8zz5mxW5UcHNo\";\nvar index = 0;\nvar mapList = [];\nvar curr_address = '';\nvar curr_coordinates = [];\nvar curr_placeID = '';\nvar path = '';\nvar uid = '';\nvar isUserExist = false;\n\n\nGeocode.setApiKey(apiKey);\n\nclass App extends React.Component {\n  state = {\n    address: \"\",\n    condensedAddress: \"\",\n    coordinates: [],\n    placeId: \"\",\n    zoom: 12,\n    height: 400,\n    mapPosition: {\n      lat: 0,\n      lng: 0,\n    },\n    markerPosition: {\n      lat: 0,\n      lng: 0,\n    }\n  }\n\n\n\n  componentDidMount() {\n    if (navigator.geolocation) {\n      navigator.geolocation.getCurrentPosition(position => {\n        console.log('position', navigator.geolocation);\n        this.setState({\n          mapPosition: {\n            lat: position.coords.latitude,\n            lng: position.coords.longitude,\n          },\n          markerPosition: {\n            lat: position.coords.latitude,\n            lng: position.coords.longitude,\n          }\n        },\n          () => {\n            Geocode.fromLatLng(position.coords.latitude, position.coords.longitude).then(\n              response => {\n                console.log('response', response);\n                const address = response.results[0].formatted_address;\n                const id = response.results[0].place_id;\n                const lat = response.results[0].geometry.location.lat;\n                const lng = response.results[0].geometry.location.lng;\n                const coordinates = [lat, lng];\n                curr_address = address;\n                curr_coordinates = coordinates;\n                curr_placeID = id;\n\n\n\n                this.setState({\n                  address: (address) ? address : '',\n                  condensedAddress: (address) ? address : \"\",\n                  coordinates: (coordinates) ? coordinates : \"\",\n                  placeId: (id) ? id : \"\"\n                })\n              },\n              error => {\n                console.error(error);\n              }\n            );\n\n          })\n      });\n    } else {\n      console.error(\"Geolocation is not supported by this browser!\");\n    }\n  };\n\n  onMarkerDragEnd = (event) => {\n    let newLat = event.latLng.lat();\n    let newLng = event.latLng.lng();\n\n    Geocode.fromLatLng(newLat, newLng).then(response => {\n      console.log('response', response);\n      const address = response.results[0].formatted_address;\n      const id = response.results[0].place_id;\n      const lat = response.results[0].geometry.location.lat;\n      const lng = response.results[0].geometry.location.lng;\n      const coordinates = [lat, lng];\n\n\n      curr_address = address;\n      curr_coordinates = coordinates;\n      curr_placeID = id;\n\n      this.setState({\n        address: (address) ? address : \"\",\n        condensedAddress: (address) ? address : \"\",\n        coordinates: (coordinates) ? coordinates : \"\",\n        placeId: (id) ? id : \"\",\n        mapPosition: {\n          lat: lat,\n          lng: lng\n        },\n        markerPosition: {\n          lat: lat,\n          lng: lng\n        }\n      })\n    });\n  }\n\n  onPlaceSelected = (place) => {\n    console.log('place', place);\n    const address = place.formatted_address;\n    const id = place.place_id;\n    const lat = place.geometry.location.lat();\n    const lng = place.geometry.location.lng();\n    const coordinates = [lat, lng];\n\n\n    curr_address = address;\n    curr_coordinates = coordinates;\n    curr_placeID = id;\n\n\n    this.setState({\n      address: (address) ? address : \"\",\n      condensedAddress: (address) ? address : \"\",\n      coordinates: (coordinates) ? coordinates : \"\",\n      placeId: (id) ? id : \"\",\n      mapPosition: {\n        lat: lat,\n        lng: lng\n      },\n      markerPosition: {\n        lat: lat,\n        lng: lng\n      }\n    })\n  };\n\n  addLocation() {\n    const location = {\n      address: curr_address,\n      condensedName: curr_address,\n      coordinates: curr_coordinates,\n      placeId: curr_placeID,\n    }\n    mapList[index] = location;\n    index = index + 1;\n    console.log(index);\n  }\n\n  clearLocations = () => {\n    index = 0;\n    mapList = [];\n  }\n\n\n\n  uploadLocations = () => {\n    var currentPath = path;\n    console.log('currentPath', currentPath);\n    var numberOfLocations = index + 1;\n\n    if (currentPath) {\n      const locationRef = firebase.database().ref(currentPath);\n      const dataPacket = {\n        mapList,\n        numberOfLocations\n      };\n      locationRef.push(dataPacket);\n      this.clearLocations();\n      console.log(\"uploaded\");\n    }\n    else {\n      console.log(\"invalid path\");\n    }\n  }\n\n  render() {\n    const MapWithAMarker = withScriptjs(withGoogleMap(props =>\n      <GoogleMap\n        defaultZoom={11}\n        defaultCenter={{ lat: this.state.mapPosition.lat, lng: this.state.mapPosition.lng }}\n        className='map'\n        style={{width: '80%'}}\n\n      >\n        <Marker\n          draggable={true}\n          onDragEnd={this.onMarkerDragEnd}\n          position={{ lat: this.state.markerPosition.lat, lng: this.state.mapPosition.lng }}\n        >\n          <InfoWindow>\n            <div>{this.state.address}</div>\n          </InfoWindow>\n        </Marker>\n        <AutoComplete\n          apiKey={apiKey}\n          style={{ width: \"100%\", height: '40px', paddindLeft: 16, marginTop: 2, marginBottom: '2rem', }}\n          onPlaceSelected={this.onPlaceSelected}\n          options={{ types: \"address\", componentRestrictions: { country: \"sg\" } }}\n        />\n      </GoogleMap>\n\n    ));\n\n    return (\n      <div>\n        <Grid container spacing={1}>\n        <h1 className=\"title-dashboard\">Welcome to MAPCEPTION's dashboard</h1>\n\n        <EnterUID />\n        <Container maxWidth=\"sm\">\n          <MapWithAMarker\n            googleMapURL=\"https://maps.googleapis.com/maps/api/js?key=AIzaSyBsPi3wA_-SZVURg6_iBq8zz5mxW5UcHNo&v=3.exp&libraries=geometry,drawing,places\"\n            loadingElement={<div style={{ height: `100%` }} />}\n            containerElement={<div style={{ height: `400px` }} />}\n            mapElement={<div style={{ height: `100%` }} />}\n            className=\"map\"\n\n            style={{ width: '80%' }}\n          />\n        </Container>\n\n        <br></br>\n        <br></br>\n\n\n        <Container fixed>\n          <h3 className=\"title-current\">Current Location Information</h3>\n          <Descriptions bordered={true} column={2} size={\"small\"} className='description-current' style={{ width: '85vh '}}>\n             <Descriptions.Item label=\"Address\" span={2}>{this.state.address}</Descriptions.Item>\n            <Descriptions.Item label=\"Latitude\">{this.state.coordinates[0]}</Descriptions.Item>\n            <Descriptions.Item label=\"Longtitude\">{this.state.coordinates[1]}</Descriptions.Item>\n            <Descriptions.Item label=\"Place ID\" span={2}>{this.state.placeId}</Descriptions.Item>\n          </Descriptions>\n        </Container>\n\n        <br />\n        <br />\n\n        {/*<button onClick={this.addLocation} className='button-addLocation'>Add Location</button>*/}\n\n        <Button variant=\"contained\" startIcon={<AddIcon />} onClick={this.addLocation}>Add Location</Button>\n        <br></br>\n        <br></br>\n        <br></br>\n        {/*\n        <button onClick={this.clearLocations}>Clear Locations</button>\n    <button onClick={this.uploadLocations}>Upload Locations</button>*/}\n        <Button variant=\"contained\" startIcon={<CloudUploadIcon />} onClick={this.uploadLocations}>Upload</Button>\n        <Button variant=\"contained\" startIcon={<ClearAllIcon />} onClick={this.clearLocations}>Upload</Button>\n</Grid>\n      </div>\n\n    );\n  }\n}\nexport default App;\n\nfunction EnterUID() {\n\tconst [input,setInput] = useState('');\n\n\tconst handleOnChange = (e) => {\n\t\tsetInput(e.target.value);\n\t}\n\n  const handleOnSubmit = (e) => {\n    e.preventDefault();\n\t\tuid = input; \n    let pre = 'sendData/';\n    //let uid = 'xfukae1s4xSSWiHClQDEAMOPrGW2';\n    path = pre.concat(uid);\n    console.log(path);\n    setInput('');\n    verification(uid);\n  }\n\n\treturn (\n\t\t<div>\n      <form onSubmit={handleOnSubmit}>\n      {/*\n\t\t\t<input \n      type='text' \n      onChange={handleOnChange} \n      value={input}\n      placeholder='Enter a user id'\n      />\n\n        <button onClick={handleOnSubmit}>Update user id</button>\n      */}\n        <TextField variant=\"outlined\" label=\"user id\" onChange={handleOnChange} value={input} type=\"text\" size=\"small\"></TextField>\n        <Button variant=\"contained\" startIcon={<FingerprintIcon />} onClick={handleOnSubmit}>Enter user id</Button>\n      </form>\n    </div>\n  )\n}\n\n\nconst verification = (uid) => {\n  if (uid === \"\") {\n    isUserExist = false;\n    console.log(isUserExist);\n    return;\n  }\n  const pre = \"Users/\";\n  const userPath = pre.concat(uid);\n  var ref = firebase.database().ref(userPath);\n  ref.once(\"value\").then(function (snapshot) {\n    isUserExist = snapshot.exists();\n    console.log(isUserExist);\n  });\n}"]},"metadata":{},"sourceType":"module"}