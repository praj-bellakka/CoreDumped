{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\leowy\\\\OneDrive\\\\Desktop\\\\React\\\\web1\\\\src\\\\App.js\";\nimport React, { useState } from 'react';\nimport './App.css';\nimport Form from './components/Form';\nimport EnterUID from './components/uid';\nimport { InfoWindow, withScriptjs, withGoogleMap, GoogleMap, Marker } from \"react-google-maps\";\nimport Geocode from \"react-geocode\";\nimport { Descriptions } from 'antd';\nimport AutoComplete from \"react-google-autocomplete\";\nimport firebase from './utils/firebase'; //global variables\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst apiKey = \"AIzaSyBsPi3wA_-SZVURg6_iBq8zz5mxW5UcHNo\";\nvar index = 0;\nvar mapList = [];\nvar j = 0;\nvar a = '';\nvar b = [];\nvar c = '';\nGeocode.setApiKey(apiKey);\n\nconst addLocation = (address, coordinates, id) => {\n  const location = {\n    address: address,\n    condensedName: address,\n    coordinates: coordinates,\n    placeId: id\n  };\n  mapList[index] = location;\n  index = index + 1;\n};\n\nconst clearLocations = () => {\n  index = 0;\n  mapList = [];\n};\n\nconst uploadLocations = () => {\n  //let pre = 'User/';\n  //let uid = 'xfukae1s4xSSWiHClQDEAMOPrGW2';\n  //let path = pre.concat(uid); \n  //console.log(path);\n  //const path = \"Users/xfukae1s4xSSWiHClQDEAMOPrGW2\" //to update UID\n  const path = \"sendData/xfukae1s4xSSWiHClQDEAMOPrGW2\"; //to update UID\n\n  const locationRef = firebase.database().ref(path);\n  const locationList = {\n    mapList\n  };\n  locationRef.push(locationList);\n  clearLocations();\n};\n\nclass App extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      address: \"\",\n      condensedAddress: \"\",\n      coordinates: [],\n      placeId: \"\",\n      zoom: 12,\n      height: 400,\n      mapPosition: {\n        lat: 0,\n        lng: 0\n      },\n      markerPosition: {\n        lat: 0,\n        lng: 0\n      }\n    };\n\n    this.onMarkerDragEnd = event => {\n      let newLat = event.latLng.lat();\n      let newLng = event.latLng.lng();\n      Geocode.fromLatLng(newLat, newLng).then(response => {\n        console.log('response', response);\n        const address = response.results[0].formatted_address;\n        const id = response.results[0].place_id;\n        const lat = response.results[0].geometry.location.lat;\n        const lng = response.results[0].geometry.location.lng;\n        const coordinates = [lat, lng];\n        j++;\n        console.log(j);\n        a = address;\n        b = [lat, lng];\n        c = id;\n        this.setState({\n          address: address ? address : \"\",\n          condensedAddress: address ? address : \"\",\n          coordinates: coordinates ? coordinates : \"\",\n          placeId: id ? id : \"\",\n          mapPosition: {\n            lat: lat,\n            lng: lng\n          },\n          markerPosition: {\n            lat: lat,\n            lng: lng\n          }\n        });\n      });\n    };\n\n    this.onPlaceSelected = place => {\n      console.log('place', place);\n      const address = place.formatted_address;\n      const id = place.place_id;\n      const lat = place.geometry.location.lat();\n      const lng = place.geometry.location.lng();\n      const coordinates = [lat, lng];\n      a = address;\n      b = [lat, lng];\n      c = id;\n      this.setState({\n        address: address ? address : \"\",\n        condensedAddress: address ? address : \"\",\n        coordinates: coordinates ? coordinates : \"\",\n        placeId: id ? id : \"\",\n        mapPosition: {\n          lat: lat,\n          lng: lng\n        },\n        markerPosition: {\n          lat: lat,\n          lng: lng\n        }\n      });\n    };\n  }\n\n  componentDidMount() {\n    if (navigator.geolocation) {\n      navigator.geolocation.getCurrentPosition(position => {\n        console.log('position', navigator.geolocation);\n        this.setState({\n          mapPosition: {\n            lat: position.coords.latitude,\n            lng: position.coords.longitude\n          },\n          markerPosition: {\n            lat: position.coords.latitude,\n            lng: position.coords.longitude\n          }\n        }, () => {\n          Geocode.fromLatLng(position.coords.latitude, position.coords.longitude).then(response => {\n            console.log('response', response);\n            const address = response.results[0].formatted_address;\n            const id = response.results[0].place_id;\n            const lat = response.results[0].geometry.location.lat;\n            const lng = response.results[0].geometry.location.lng;\n            const coordinates = [lat, lng];\n            a = address;\n            b = [lat, lng];\n            c = id;\n            j++;\n            console.log(j);\n            this.setState({\n              address: address ? address : '',\n              condensedAddress: address ? address : \"\",\n              coordinates: coordinates ? coordinates : \"\",\n              placeId: id ? id : \"\"\n            });\n          }, error => {\n            console.error(error);\n          });\n        });\n      });\n    } else {\n      console.error(\"Geolocation is not supported by this browser!\");\n    }\n  }\n\n  render() {\n    const MapWithAMarker = withScriptjs(withGoogleMap(props => /*#__PURE__*/_jsxDEV(GoogleMap, {\n      defaultZoom: 11,\n      defaultCenter: {\n        lat: this.state.mapPosition.lat,\n        lng: this.state.mapPosition.lng\n      },\n      children: [/*#__PURE__*/_jsxDEV(Marker, {\n        draggable: true,\n        onDragEnd: this.onMarkerDragEnd,\n        position: {\n          lat: this.state.markerPosition.lat,\n          lng: this.state.mapPosition.lng\n        },\n        children: /*#__PURE__*/_jsxDEV(InfoWindow, {\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            children: this.state.address\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 201,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 200,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 195,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(AutoComplete, {\n        apiKey: apiKey,\n        style: {\n          width: \"100%\",\n          height: '40px',\n          paddindLeft: 16,\n          marginTop: 2,\n          marginBottom: '2rem'\n        },\n        onPlaceSelected: this.onPlaceSelected,\n        options: {\n          types: \"address\",\n          componentRestrictions: \"sg\"\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 204,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 191,\n      columnNumber: 7\n    }, this)));\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(MapWithAMarker, {\n        googleMapURL: \"https://maps.googleapis.com/maps/api/js?key=AIzaSyBsPi3wA_-SZVURg6_iBq8zz5mxW5UcHNo&v=3.exp&libraries=geometry,drawing,places\",\n        loadingElement: /*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            height: `100%`\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 218,\n          columnNumber: 25\n        }, this),\n        containerElement: /*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            height: `400px`\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 219,\n          columnNumber: 29\n        }, this),\n        mapElement: /*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            height: `100%`\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 220,\n          columnNumber: 23\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 216,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 223,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 224,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 225,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"Location Information\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 228,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Descriptions, {\n        bordered: true,\n        column: 10,\n        size: \"small\",\n        children: [/*#__PURE__*/_jsxDEV(Descriptions.Item, {\n          label: \"Address\",\n          children: this.state.address\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 230,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Descriptions.Item, {\n          label: \"Latitude\",\n          children: this.state.coordinates[0]\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 231,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Descriptions.Item, {\n          label: \"Longtitude\",\n          children: this.state.coordinates[1]\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 232,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Descriptions.Item, {\n          label: \"Place ID\",\n          children: this.state.placeId\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 233,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 229,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 236,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 237,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: addLocation(a, b, c),\n        children: \"Add Location\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 239,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: clearLocations,\n        children: \"Clear Locations\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 240,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: uploadLocations,\n        children: \"Upload Locations\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 241,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 215,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["C:/Users/leowy/OneDrive/Desktop/React/web1/src/App.js"],"names":["React","useState","Form","EnterUID","InfoWindow","withScriptjs","withGoogleMap","GoogleMap","Marker","Geocode","Descriptions","AutoComplete","firebase","apiKey","index","mapList","j","a","b","c","setApiKey","addLocation","address","coordinates","id","location","condensedName","placeId","clearLocations","uploadLocations","path","locationRef","database","ref","locationList","push","App","Component","state","condensedAddress","zoom","height","mapPosition","lat","lng","markerPosition","onMarkerDragEnd","event","newLat","latLng","newLng","fromLatLng","then","response","console","log","results","formatted_address","place_id","geometry","setState","onPlaceSelected","place","componentDidMount","navigator","geolocation","getCurrentPosition","position","coords","latitude","longitude","error","render","MapWithAMarker","props","width","paddindLeft","marginTop","marginBottom","types","componentRestrictions"],"mappings":"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","sourcesContent":["import React, {useState} from 'react';\nimport './App.css';\nimport Form from './components/Form'\nimport EnterUID from './components/uid';\nimport {\n  InfoWindow,\n  withScriptjs,\n  withGoogleMap,\n  GoogleMap,\n  Marker,\n} from \"react-google-maps\";\nimport Geocode from \"react-geocode\";\nimport { Descriptions } from 'antd';\nimport AutoComplete from \"react-google-autocomplete\";\nimport firebase from './utils/firebase';\n\n//global variables\nconst apiKey = \"AIzaSyBsPi3wA_-SZVURg6_iBq8zz5mxW5UcHNo\";\nvar index = 0;\nvar mapList = [];\nvar j = 0;\nvar a = '';\nvar b = [];\nvar c = '';\n\nGeocode.setApiKey(apiKey);  \n\nconst addLocation = (address, coordinates, id) => {\n    const location = {\n      address: address,\n      condensedName: address,\n      coordinates: coordinates,\n      placeId: id,\n    }\n    mapList[index] = location;\n    index = index + 1;\n}\n\nconst clearLocations = () => {\n  index = 0;\n  mapList = [];\n}\n\nconst uploadLocations = () => {\n\t\t//let pre = 'User/';\n\t\t//let uid = 'xfukae1s4xSSWiHClQDEAMOPrGW2';\n\t\t//let path = pre.concat(uid); \n\t\t//console.log(path);\n\t\t//const path = \"Users/xfukae1s4xSSWiHClQDEAMOPrGW2\" //to update UID\n\t\tconst path = \"sendData/xfukae1s4xSSWiHClQDEAMOPrGW2\" //to update UID\n\t\tconst locationRef = firebase.database().ref(path);\n\t\tconst locationList = {\n\t\t\tmapList\n\t\t};\n\t\tlocationRef.push(locationList);\n    clearLocations();\n\t}\n\nclass App extends React.Component {\n  state = {\n    address: \"\",\n    condensedAddress: \"\",\n    coordinates: [],\n    placeId: \"\",\n    zoom: 12,\n    height: 400,\n    mapPosition: {\n      lat: 0,\n      lng: 0,\n    },\n    markerPosition: {\n      lat: 0,\n      lng: 0,\n    }\n  }\n\n  \n\n  componentDidMount() {\n    if (navigator.geolocation) {\n      navigator.geolocation.getCurrentPosition(position => {\n        console.log('position', navigator.geolocation);\n        this.setState({\n          mapPosition: {\n            lat: position.coords.latitude,\n            lng: position.coords.longitude,\n          },\n          markerPosition: {\n            lat: position.coords.latitude,\n            lng: position.coords.longitude,\n          }\n        },\n          () => {\n            Geocode.fromLatLng(position.coords.latitude, position.coords.longitude).then(\n              response => {\n                console.log('response', response);\n                const address = response.results[0].formatted_address;\n                const id = response.results[0].place_id;\n                const lat = response.results[0].geometry.location.lat;\n                const lng = response.results[0].geometry.location.lng;\n                const coordinates = [lat, lng];\n                a = address;\n                b = [lat, lng];\n                c = id;\n                j++;\n                console.log(j);\n\n                this.setState({\n                  address: (address) ? address : '',\n                  condensedAddress: (address) ? address : \"\",\n                  coordinates: (coordinates) ? coordinates : \"\",\n                  placeId: (id) ? id : \"\"\n                })\n              },\n              error => {\n                console.error(error);\n              }\n            );\n\n          })\n      });\n    } else {\n      console.error(\"Geolocation is not supported by this browser!\");\n    }\n  };\n\n  onMarkerDragEnd = (event) => {\n    let newLat = event.latLng.lat();\n    let newLng = event.latLng.lng();\n\n    Geocode.fromLatLng(newLat, newLng).then(response => {\n      console.log('response', response);\n      const address = response.results[0].formatted_address;\n      const id = response.results[0].place_id;\n      const lat = response.results[0].geometry.location.lat;\n      const lng = response.results[0].geometry.location.lng;\n      const coordinates = [lat, lng];\n      j++;\n      console.log(j);\n                a = address;\n                b = [lat, lng];\n                c = id;\n\n      this.setState({\n        address: (address) ? address : \"\",\n        condensedAddress: (address) ? address : \"\",\n        coordinates: (coordinates) ? coordinates : \"\",\n        placeId: (id) ? id : \"\",\n        mapPosition: {\n          lat: lat,\n          lng: lng\n        },\n        markerPosition: {\n          lat: lat,\n          lng: lng\n        }\n      })\n    });\n  }\n\n  onPlaceSelected = (place) => {\n    console.log('place', place);\n    const address = place.formatted_address;\n    const id = place.place_id;\n    const lat = place.geometry.location.lat();\n    const lng = place.geometry.location.lng();\n    const coordinates = [lat, lng];\n\n                a = address;\n                b = [lat, lng];\n                c = id;\n    this.setState({\n      address: (address) ? address : \"\",\n      condensedAddress: (address) ? address : \"\",\n      coordinates: (coordinates) ? coordinates : \"\",\n      placeId: (id) ? id : \"\",\n      mapPosition: {\n        lat: lat,\n        lng: lng\n      },\n      markerPosition: {\n        lat: lat,\n        lng: lng\n      }\n    })\n\n  };\n\n  render() {\n    const MapWithAMarker = withScriptjs(withGoogleMap(props =>\n      <GoogleMap\n        defaultZoom={11}\n        defaultCenter={{ lat: this.state.mapPosition.lat, lng: this.state.mapPosition.lng }}\n      >\n        <Marker\n          draggable={true}\n          onDragEnd={this.onMarkerDragEnd}\n          position={{ lat: this.state.markerPosition.lat, lng: this.state.mapPosition.lng }}\n        >\n          <InfoWindow>\n            <div>{this.state.address}</div>\n          </InfoWindow>\n        </Marker>\n        <AutoComplete\n          apiKey={apiKey}\n          style={{ width: \"100%\", height: '40px', paddindLeft: 16, marginTop: 2, marginBottom: '2rem' }}\n          onPlaceSelected={this.onPlaceSelected}\n          options={{ types: \"address\", componentRestrictions: \"sg\" }}\n        />\n      </GoogleMap>\n\n    ));\n\n    return (\n      <div>\n      <MapWithAMarker\n        googleMapURL=\"https://maps.googleapis.com/maps/api/js?key=AIzaSyBsPi3wA_-SZVURg6_iBq8zz5mxW5UcHNo&v=3.exp&libraries=geometry,drawing,places\"\n        loadingElement={<div style={{ height: `100%` }} />}\n          containerElement={<div style={{ height: `400px` }} />}\n          mapElement={<div style={{ height: `100%` }} />}\n        />\n\n        <br />\n        <br />\n        <br />\n\n\n        <h3>Location Information</h3>\n        <Descriptions  bordered={true} column={10} size={\"small\"}>\n          <Descriptions.Item label=\"Address\">{this.state.address}</Descriptions.Item>\n          <Descriptions.Item label=\"Latitude\">{this.state.coordinates[0]}</Descriptions.Item>\n          <Descriptions.Item label=\"Longtitude\">{this.state.coordinates[1]}</Descriptions.Item>\n          <Descriptions.Item label=\"Place ID\">{this.state.placeId}</Descriptions.Item>\n        </Descriptions>\n   \n        <br />\n        <br />\n\n        <button onClick={addLocation(a,b,c)}>Add Location</button>\n        <button onClick={clearLocations}>Clear Locations</button>\n        <button onClick={uploadLocations}>Upload Locations</button>\n      </div>\n\n    );\n  }\n}\nexport default App;\n\n\n"]},"metadata":{},"sourceType":"module"}