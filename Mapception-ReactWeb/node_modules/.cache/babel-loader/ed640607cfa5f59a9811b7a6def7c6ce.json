{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\leowy\\\\OneDrive\\\\Desktop\\\\React\\\\web1\\\\src\\\\App.js\";\nimport React, { useState } from 'react';\nimport './App.css';\nimport { InfoWindow, withScriptjs, withGoogleMap, GoogleMap, Marker } from \"react-google-maps\";\nimport Geocode from \"react-geocode\";\nimport { Descriptions } from 'antd';\nimport AutoComplete from \"react-google-autocomplete\";\nimport firebase from './utils/firebase';\nimport EnterUID from './components/UIDForm'; //global variables\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst apiKey = \"AIzaSyBsPi3wA_-SZVURg6_iBq8zz5mxW5UcHNo\";\nvar index = 0;\nvar mapList = [];\nvar curr_address = '';\nvar curr_coordinates = [];\nvar curr_placeID = '';\nvar path = '';\nGeocode.setApiKey(apiKey);\n\nclass App extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      address: \"\",\n      condensedAddress: \"\",\n      coordinates: [],\n      placeId: \"\",\n      zoom: 12,\n      height: 400,\n      mapPosition: {\n        lat: 0,\n        lng: 0\n      },\n      markerPosition: {\n        lat: 0,\n        lng: 0\n      }\n    };\n\n    this.onMarkerDragEnd = event => {\n      let newLat = event.latLng.lat();\n      let newLng = event.latLng.lng();\n      Geocode.fromLatLng(newLat, newLng).then(response => {\n        console.log('response', response);\n        const address = response.results[0].formatted_address;\n        const id = response.results[0].place_id;\n        const lat = response.results[0].geometry.location.lat;\n        const lng = response.results[0].geometry.location.lng;\n        const coordinates = [lat, lng];\n        curr_address = address;\n        curr_coordinates = coordinates;\n        curr_placeID = id;\n        this.setState({\n          address: address ? address : \"\",\n          condensedAddress: address ? address : \"\",\n          coordinates: coordinates ? coordinates : \"\",\n          placeId: id ? id : \"\",\n          mapPosition: {\n            lat: lat,\n            lng: lng\n          },\n          markerPosition: {\n            lat: lat,\n            lng: lng\n          }\n        });\n      });\n    };\n\n    this.onPlaceSelected = place => {\n      console.log('place', place);\n      const address = place.formatted_address;\n      const id = place.place_id;\n      const lat = place.geometry.location.lat();\n      const lng = place.geometry.location.lng();\n      const coordinates = [lat, lng];\n      curr_address = address;\n      curr_coordinates = coordinates;\n      curr_placeID = id;\n      this.setState({\n        address: address ? address : \"\",\n        condensedAddress: address ? address : \"\",\n        coordinates: coordinates ? coordinates : \"\",\n        placeId: id ? id : \"\",\n        mapPosition: {\n          lat: lat,\n          lng: lng\n        },\n        markerPosition: {\n          lat: lat,\n          lng: lng\n        }\n      });\n    };\n\n    this.clearLocations = () => {\n      index = 0;\n      mapList = [];\n    };\n\n    this.updatePath = () => {\n      let pre = 'sendData/';\n      let uid = 'xfukae1s4xSSWiHClQDEAMOPrGW2';\n      path = pre.concat(uid);\n      console.log(path);\n    };\n\n    this.uploadLocations = () => {\n      var currentPath = path;\n      console.log('currentPath', currentPath);\n\n      if (currentPath) {\n        const locationRef = firebase.database().ref(currentPath);\n        const locationList = {\n          mapList\n        };\n        locationRef.push(locationList);\n        this.clearLocations();\n        console.log(\"uploaded\");\n      } else {\n        console.log(\"invalid path\");\n      }\n    };\n  }\n\n  componentDidMount() {\n    if (navigator.geolocation) {\n      navigator.geolocation.getCurrentPosition(position => {\n        console.log('position', navigator.geolocation);\n        this.setState({\n          mapPosition: {\n            lat: position.coords.latitude,\n            lng: position.coords.longitude\n          },\n          markerPosition: {\n            lat: position.coords.latitude,\n            lng: position.coords.longitude\n          }\n        }, () => {\n          Geocode.fromLatLng(position.coords.latitude, position.coords.longitude).then(response => {\n            console.log('response', response);\n            const address = response.results[0].formatted_address;\n            const id = response.results[0].place_id;\n            const lat = response.results[0].geometry.location.lat;\n            const lng = response.results[0].geometry.location.lng;\n            const coordinates = [lat, lng];\n            curr_address = address;\n            curr_coordinates = coordinates;\n            curr_placeID = id;\n            this.setState({\n              address: address ? address : '',\n              condensedAddress: address ? address : \"\",\n              coordinates: coordinates ? coordinates : \"\",\n              placeId: id ? id : \"\"\n            });\n          }, error => {\n            console.error(error);\n          });\n        });\n      });\n    } else {\n      console.error(\"Geolocation is not supported by this browser!\");\n    }\n  }\n\n  addLocation() {\n    const location = {\n      address: curr_address,\n      condensedName: curr_address,\n      coordinates: curr_coordinates,\n      placeId: curr_placeID\n    };\n    mapList[index] = location;\n    index = index + 1;\n    console.log(index);\n  }\n\n  clearPath() {\n    path = '';\n  }\n\n  render() {\n    const MapWithAMarker = withScriptjs(withGoogleMap(props => /*#__PURE__*/_jsxDEV(GoogleMap, {\n      defaultZoom: 11,\n      defaultCenter: {\n        lat: this.state.mapPosition.lat,\n        lng: this.state.mapPosition.lng\n      },\n      children: [/*#__PURE__*/_jsxDEV(Marker, {\n        draggable: true,\n        onDragEnd: this.onMarkerDragEnd,\n        position: {\n          lat: this.state.markerPosition.lat,\n          lng: this.state.mapPosition.lng\n        },\n        children: /*#__PURE__*/_jsxDEV(InfoWindow, {\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            children: this.state.address\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 219,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 218,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 213,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(AutoComplete, {\n        apiKey: apiKey,\n        style: {\n          width: \"100%\",\n          height: '40px',\n          paddindLeft: 16,\n          marginTop: 2,\n          marginBottom: '2rem'\n        },\n        onPlaceSelected: this.onPlaceSelected,\n        options: {\n          types: \"address\",\n          componentRestrictions: \"SG\"\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 222,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 208,\n      columnNumber: 7\n    }, this)));\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(MapWithAMarker, {\n        googleMapURL: \"https://maps.googleapis.com/maps/api/js?key=AIzaSyBsPi3wA_-SZVURg6_iBq8zz5mxW5UcHNo&v=3.exp&libraries=geometry,drawing,places\",\n        loadingElement: /*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            height: `100%`\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 236,\n          columnNumber: 27\n        }, this),\n        containerElement: /*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            height: `400px`\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 237,\n          columnNumber: 29\n        }, this),\n        mapElement: /*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            height: `100%`\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 238,\n          columnNumber: 23\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 234,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 241,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 242,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 243,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"Location Information\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 245,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Descriptions, {\n        bordered: true,\n        column: 10,\n        size: \"small\",\n        children: [/*#__PURE__*/_jsxDEV(Descriptions.Item, {\n          label: \"Address\",\n          children: this.state.address\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 247,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Descriptions.Item, {\n          label: \"Latitude\",\n          children: this.state.coordinates[0]\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 248,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Descriptions.Item, {\n          label: \"Longtitude\",\n          children: this.state.coordinates[1]\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 249,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Descriptions.Item, {\n          label: \"Place ID\",\n          children: this.state.placeId\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 250,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 246,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 253,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 254,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: this.addLocation,\n        children: \"Add Location\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 256,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 257,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 258,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 259,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(EnterUID, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 260,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 261,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: this.updatePath,\n        children: \"Enter UID\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 262,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: this.clearLocations,\n        children: \"Clear Locations\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 263,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: this.uploadLocations,\n        children: \"Upload Locations\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 264,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 233,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["C:/Users/leowy/OneDrive/Desktop/React/web1/src/App.js"],"names":["React","useState","InfoWindow","withScriptjs","withGoogleMap","GoogleMap","Marker","Geocode","Descriptions","AutoComplete","firebase","EnterUID","apiKey","index","mapList","curr_address","curr_coordinates","curr_placeID","path","setApiKey","App","Component","state","address","condensedAddress","coordinates","placeId","zoom","height","mapPosition","lat","lng","markerPosition","onMarkerDragEnd","event","newLat","latLng","newLng","fromLatLng","then","response","console","log","results","formatted_address","id","place_id","geometry","location","setState","onPlaceSelected","place","clearLocations","updatePath","pre","uid","concat","uploadLocations","currentPath","locationRef","database","ref","locationList","push","componentDidMount","navigator","geolocation","getCurrentPosition","position","coords","latitude","longitude","error","addLocation","condensedName","clearPath","render","MapWithAMarker","props","width","paddindLeft","marginTop","marginBottom","types","componentRestrictions"],"mappings":"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","sourcesContent":["import React, { useState } from 'react';\nimport './App.css';\nimport {\n  InfoWindow,\n  withScriptjs,\n  withGoogleMap,\n  GoogleMap,\n  Marker,\n} from \"react-google-maps\";\nimport Geocode from \"react-geocode\";\nimport { Descriptions } from 'antd';\nimport AutoComplete from \"react-google-autocomplete\";\nimport firebase from './utils/firebase';\nimport EnterUID from './components/UIDForm';\n\n//global variables\nconst apiKey = \"AIzaSyBsPi3wA_-SZVURg6_iBq8zz5mxW5UcHNo\";\nvar index = 0;\nvar mapList = [];\nvar curr_address = '';\nvar curr_coordinates = [];\nvar curr_placeID = '';\nvar path = '';\n\n\nGeocode.setApiKey(apiKey);\n\nclass App extends React.Component {\n  state = {\n    address: \"\",\n    condensedAddress: \"\",\n    coordinates: [],\n    placeId: \"\",\n    zoom: 12,\n    height: 400,\n    mapPosition: {\n      lat: 0,\n      lng: 0,\n    },\n    markerPosition: {\n      lat: 0,\n      lng: 0,\n    }\n  }\n\n\n\n  componentDidMount() {\n    if (navigator.geolocation) {\n      navigator.geolocation.getCurrentPosition(position => {\n        console.log('position', navigator.geolocation);\n        this.setState({\n          mapPosition: {\n            lat: position.coords.latitude,\n            lng: position.coords.longitude,\n          },\n          markerPosition: {\n            lat: position.coords.latitude,\n            lng: position.coords.longitude,\n          }\n        },\n          () => {\n            Geocode.fromLatLng(position.coords.latitude, position.coords.longitude).then(\n              response => {\n                console.log('response', response);\n                const address = response.results[0].formatted_address;\n                const id = response.results[0].place_id;\n                const lat = response.results[0].geometry.location.lat;\n                const lng = response.results[0].geometry.location.lng;\n                const coordinates = [lat, lng];\n                curr_address = address;\n                curr_coordinates = coordinates;\n                curr_placeID = id;\n\n\n\n                this.setState({\n                  address: (address) ? address : '',\n                  condensedAddress: (address) ? address : \"\",\n                  coordinates: (coordinates) ? coordinates : \"\",\n                  placeId: (id) ? id : \"\"\n                })\n              },\n              error => {\n                console.error(error);\n              }\n            );\n\n          })\n      });\n    } else {\n      console.error(\"Geolocation is not supported by this browser!\");\n    }\n  };\n\n  onMarkerDragEnd = (event) => {\n    let newLat = event.latLng.lat();\n    let newLng = event.latLng.lng();\n\n    Geocode.fromLatLng(newLat, newLng).then(response => {\n      console.log('response', response);\n      const address = response.results[0].formatted_address;\n      const id = response.results[0].place_id;\n      const lat = response.results[0].geometry.location.lat;\n      const lng = response.results[0].geometry.location.lng;\n      const coordinates = [lat, lng];\n\n\n      curr_address = address;\n      curr_coordinates = coordinates;\n      curr_placeID = id;\n\n      this.setState({\n        address: (address) ? address : \"\",\n        condensedAddress: (address) ? address : \"\",\n        coordinates: (coordinates) ? coordinates : \"\",\n        placeId: (id) ? id : \"\",\n        mapPosition: {\n          lat: lat,\n          lng: lng\n        },\n        markerPosition: {\n          lat: lat,\n          lng: lng\n        }\n      })\n    });\n  }\n\n  onPlaceSelected = (place) => {\n    console.log('place', place);\n    const address = place.formatted_address;\n    const id = place.place_id;\n    const lat = place.geometry.location.lat();\n    const lng = place.geometry.location.lng();\n    const coordinates = [lat, lng];\n\n\n    curr_address = address;\n    curr_coordinates = coordinates;\n    curr_placeID = id;\n\n\n    this.setState({\n      address: (address) ? address : \"\",\n      condensedAddress: (address) ? address : \"\",\n      coordinates: (coordinates) ? coordinates : \"\",\n      placeId: (id) ? id : \"\",\n      mapPosition: {\n        lat: lat,\n        lng: lng\n      },\n      markerPosition: {\n        lat: lat,\n        lng: lng\n      }\n    })\n  };\n\n  addLocation() {\n    const location = {\n      address: curr_address,\n      condensedName: curr_address,\n      coordinates: curr_coordinates,\n      placeId: curr_placeID,\n    }\n    mapList[index] = location;\n    index = index + 1;\n    console.log(index);\n  }\n\n  clearLocations = () => {\n    index = 0;\n    mapList = [];\n  }\n\n  clearPath() {\n    path = '';\n  }\n\n  updatePath = () => {\n    let pre = 'sendData/';\n    let uid = 'xfukae1s4xSSWiHClQDEAMOPrGW2';\n    path = pre.concat(uid);\n    console.log(path);\n  }\n\n  uploadLocations = () => {\n    var currentPath = path;\n    console.log('currentPath', currentPath);\n\n    if (currentPath) {\n      const locationRef = firebase.database().ref(currentPath);\n      const locationList = {\n        mapList\n      };\n      locationRef.push(locationList);\n      this.clearLocations();\n      console.log(\"uploaded\");\n    }\n    else {\n      console.log(\"invalid path\");\n    }\n  }\n\n  render() {\n    const MapWithAMarker = withScriptjs(withGoogleMap(props =>\n      <GoogleMap\n        defaultZoom={11}\n        defaultCenter={{ lat: this.state.mapPosition.lat, lng: this.state.mapPosition.lng }}\n\n      >\n        <Marker\n          draggable={true}\n          onDragEnd={this.onMarkerDragEnd}\n          position={{ lat: this.state.markerPosition.lat, lng: this.state.mapPosition.lng }}\n        >\n          <InfoWindow>\n            <div>{this.state.address}</div>\n          </InfoWindow>\n        </Marker>\n        <AutoComplete\n          apiKey={apiKey}\n          style={{ width: \"100%\", height: '40px', paddindLeft: 16, marginTop: 2, marginBottom: '2rem' }}\n          onPlaceSelected={this.onPlaceSelected}\n          options={{ types: \"address\", componentRestrictions: \"SG\" }}\n        />\n      </GoogleMap>\n\n    ));\n\n    return (\n      <div>\n        <MapWithAMarker\n          googleMapURL=\"https://maps.googleapis.com/maps/api/js?key=AIzaSyBsPi3wA_-SZVURg6_iBq8zz5mxW5UcHNo&v=3.exp&libraries=geometry,drawing,places\"\n          loadingElement={<div style={{ height: `100%` }} />}\n          containerElement={<div style={{ height: `400px` }} />}\n          mapElement={<div style={{ height: `100%` }} />}\n        />\n\n        <br />\n        <br />\n        <br />\n\n        <h3>Location Information</h3>\n        <Descriptions bordered={true} column={10} size={\"small\"}>\n          <Descriptions.Item label=\"Address\">{this.state.address}</Descriptions.Item>\n          <Descriptions.Item label=\"Latitude\">{this.state.coordinates[0]}</Descriptions.Item>\n          <Descriptions.Item label=\"Longtitude\">{this.state.coordinates[1]}</Descriptions.Item>\n          <Descriptions.Item label=\"Place ID\">{this.state.placeId}</Descriptions.Item>\n        </Descriptions>\n\n        <br />\n        <br />\n\n        <button onClick={this.addLocation}>Add Location</button>\n        <br></br>\n        <br></br>\n        <br></br>\n        <EnterUID />\n        <br></br>\n        <button onClick={this.updatePath}>Enter UID</button>\n        <button onClick={this.clearLocations}>Clear Locations</button>\n        <button onClick={this.uploadLocations}>Upload Locations</button>\n      </div>\n\n    );\n  }\n}\nexport default App;"]},"metadata":{},"sourceType":"module"}